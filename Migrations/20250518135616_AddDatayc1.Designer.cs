// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quanlykytucxa.Models;

namespace Quanlykytucxa.Migrations
{
    [DbContext(typeof(QuanLyKTXContext))]
    [Migration("20250518135616_AddDatayc1")]
    partial class AddDatayc1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Vietnamese_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "da2068b6-9815-4931-b603-599b35340c14",
                            ConcurrencyStamp = "af0f5a5c-b659-4d0d-87b5-f4f9eac9b244",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = "1259b379-0e49-4c72-b070-2fdf39caef58",
                            ConcurrencyStamp = "55f0bd43-8b32-4b1e-9c75-b8e59ffab998",
                            Name = "client",
                            NormalizedName = "client"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.ChitietDkdichvu", b =>
                {
                    b.Property<string>("MaDk")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maDK")
                        .IsFixedLength(true);

                    b.Property<string>("MaDv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maDv")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Ngaydangki")
                        .HasColumnType("date")
                        .HasColumnName("ngaydangki");

                    b.Property<int?>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.HasKey("MaDk", "MaDv")
                        .HasName("PK__ChitietD__7D9D1B4922C61172");

                    b.HasIndex("MaDv");

                    b.ToTable("ChitietDKdichvu");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.DangKyKtx", b =>
                {
                    b.Property<string>("MaDk")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maDK")
                        .IsFixedLength(true);

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int")
                        .HasColumnName("maPhong");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Ngaythanhtoan")
                        .HasColumnType("date")
                        .HasColumnName("ngaythanhtoan");

                    b.Property<string>("SinhVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('Đang ?')");

                    b.Property<string>("TransId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transId");

                    b.HasKey("MaDk")
                        .HasName("PK__DangKyKT__7A3EF40A8D942706");

                    b.HasIndex("MaPhong");

                    b.HasIndex("SinhVienId");

                    b.ToTable("DangKyKTX");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.DichvuKtx", b =>
                {
                    b.Property<string>("MaDv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maDV")
                        .IsFixedLength(true);

                    b.Property<string>("Ghichu")
                        .HasColumnType("text")
                        .HasColumnName("ghichu");

                    b.Property<int?>("Giadichvu")
                        .HasColumnType("int")
                        .HasColumnName("giadichvu");

                    b.HasKey("MaDv")
                        .HasName("PK__DichvuKT__7A3EF41167699EAD");

                    b.ToTable("DichvuKTX");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Diennuoc", b =>
                {
                    b.Property<string>("MaDn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("maDN")
                        .IsFixedLength(true);

                    b.Property<int?>("Giadien")
                        .HasColumnType("int")
                        .HasColumnName("giadien");

                    b.Property<int?>("Gianuoc")
                        .HasColumnType("int")
                        .HasColumnName("gianuoc");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int")
                        .HasColumnName("maPhong");

                    b.Property<DateTime?>("Ngaytao")
                        .HasColumnType("date")
                        .HasColumnName("ngaytao");

                    b.Property<int?>("Sodien")
                        .HasColumnType("int")
                        .HasColumnName("sodien");

                    b.Property<int?>("Sonuoc")
                        .HasColumnType("int")
                        .HasColumnName("sonuoc");

                    b.Property<string>("TransId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transId");

                    b.HasKey("MaDn")
                        .HasName("PK__Diennuoc__7A3EF4097267577A");

                    b.HasIndex("MaPhong");

                    b.ToTable("Diennuoc");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maHoaDon")
                        .IsFixedLength(true);

                    b.Property<int?>("Giadien")
                        .HasColumnType("int")
                        .HasColumnName("giadien");

                    b.Property<int?>("Gianuoc")
                        .HasColumnType("int")
                        .HasColumnName("gianuoc");

                    b.Property<string>("MaDn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("maDN")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Ngaytao")
                        .HasColumnType("date")
                        .HasColumnName("ngaytao");

                    b.Property<int>("TienD")
                        .HasColumnType("int");

                    b.Property<int>("TienNc")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon")
                        .HasName("PK__HoaDon__026B4D9A63D2BD1F");

                    b.HasIndex(new[] { "MaDn" }, "UQ__HoaDon__7A3EF408168A331D")
                        .IsUnique();

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Khu", b =>
                {
                    b.Property<int>("MaKhu")
                        .HasColumnType("int")
                        .HasColumnName("maKhu");

                    b.Property<string>("TenKhu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKhu")
                        .HasName("PK__Khu__26DF73D23333FDB8");

                    b.ToTable("Khu");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.LoaiPhong", b =>
                {
                    b.Property<int>("Maloai")
                        .HasColumnType("int")
                        .HasColumnName("maloai");

                    b.Property<int?>("SoluongSv")
                        .HasColumnType("int")
                        .HasColumnName("soluongSV");

                    b.Property<string>("Tenloai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenloai");

                    b.Property<string>("anh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Maloai")
                        .HasName("PK__loaiPhon__734B3AEAF30A0FD0");

                    b.ToTable("loaiPhong");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.NhanVienQl", b =>
                {
                    b.Property<string>("MaNv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maNV")
                        .IsFixedLength(true);

                    b.Property<string>("Cccd")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CCCD");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Hoten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNv")
                        .HasName("PK__NhanVien__7A3EC7D5A547C89A");

                    b.HasIndex(new[] { "TenDangNhap" }, "UQ__NhanVien__55F68FC0409A49CD")
                        .IsUnique();

                    b.HasIndex(new[] { "Cccd" }, "UQ__NhanVien__A955A0AAB86250BB")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__NhanVien__AB6E616409AE3F0C")
                        .IsUnique();

                    b.HasIndex(new[] { "Sdt" }, "UQ__NhanVien__CA1930A5BBF122E6")
                        .IsUnique();

                    b.ToTable("NhanVienQL");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Phong", b =>
                {
                    b.Property<int>("MaPhong")
                        .HasColumnType("int")
                        .HasColumnName("maPhong");

                    b.Property<int?>("Loaiphong")
                        .HasColumnType("int")
                        .HasColumnName("loaiphong");

                    b.Property<int>("MaKhu")
                        .HasColumnType("int")
                        .HasColumnName("maKhu");

                    b.Property<int>("Maloai")
                        .HasColumnType("int")
                        .HasColumnName("maloai");

                    b.Property<string>("Mota")
                        .HasColumnType("text")
                        .HasColumnName("mota");

                    b.Property<int>("SoluongSv")
                        .HasColumnType("int")
                        .HasColumnName("soluongSV");

                    b.Property<int?>("Soluongdk")
                        .HasColumnType("int")
                        .HasColumnName("soluongdk");

                    b.Property<int?>("Tienphong")
                        .HasColumnType("int")
                        .HasColumnName("tienphong");

                    b.Property<int?>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.Property<string>("img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhong")
                        .HasName("PK__Phong__4CD55E1095BC4458");

                    b.HasIndex("MaKhu");

                    b.HasIndex("Maloai");

                    b.ToTable("Phong");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.SinhVien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Cccd")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CCCD");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("SDT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TenSV");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex(new[] { "Cccd" }, "UQ__SinhVien__A955A0AA840616F4")
                        .IsUnique();

                    b.HasIndex(new[] { "Sdt" }, "UQ__SinhVien__CA1930A577F0B174")
                        .IsUnique();

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.ThongBao", b =>
                {
                    b.Property<int>("MaThongBao")
                        .HasColumnType("int")
                        .HasColumnName("maThongBao");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SinhVienId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SinhVienId");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaThongBao")
                        .HasName("PK__ThongBao__657CA53970739E5D");

                    b.HasIndex("SinhVienId");

                    b.ToTable("ThongBao");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.YeuCauSuaChua", b =>
                {
                    b.Property<int>("MaYeuCau")
                        .HasColumnType("int")
                        .HasColumnName("maYeuCau");

                    b.Property<string>("Ghichu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int")
                        .HasColumnName("maPhong");

                    b.Property<DateTime>("Ngaygui")
                        .HasColumnType("datetime2");

                    b.Property<string>("SinhVienId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SinhVienId");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('Đang th?c hi?n')");

                    b.HasKey("MaYeuCau")
                        .HasName("PK__YeuCauSu__765F6DD6460F277A");

                    b.HasIndex("MaPhong");

                    b.HasIndex("SinhVienId");

                    b.ToTable("YeuCauSuaChua");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.SinhVien", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.SinhVien", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quanlykytucxa.Models.SinhVien", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.SinhVien", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quanlykytucxa.Models.ChitietDkdichvu", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.DangKyKtx", "MaDkNavigation")
                        .WithMany("ChitietDkdichvus")
                        .HasForeignKey("MaDk")
                        .HasConstraintName("FK__ChitietDKd__maDK__403A8C7D")
                        .IsRequired();

                    b.HasOne("Quanlykytucxa.Models.DichvuKtx", "MaDvNavigation")
                        .WithMany("ChitietDkdichvus")
                        .HasForeignKey("MaDv")
                        .HasConstraintName("FK__ChitietDKd__maDv__412EB0B6")
                        .IsRequired();

                    b.Navigation("MaDkNavigation");

                    b.Navigation("MaDvNavigation");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.DangKyKtx", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.Phong", "MaPhongNavigation")
                        .WithMany("DangKyKtxes")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK__DangKyKTX__maPho__3B75D760");

                    b.HasOne("Quanlykytucxa.Models.SinhVien", "SinhVien")
                        .WithMany("DangKyKtxes")
                        .HasForeignKey("SinhVienId")
                        .HasConstraintName("FK_DangKyKtx_SinhVien");

                    b.Navigation("MaPhongNavigation");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Diennuoc", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.Phong", "MaPhongNavigation")
                        .WithMany("Diennuocs")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK__Diennuoc__maPhon__440B1D61");

                    b.Navigation("MaPhongNavigation");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.HoaDon", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.Diennuoc", "MaDnNavigation")
                        .WithOne("HoaDon")
                        .HasForeignKey("Quanlykytucxa.Models.HoaDon", "MaDn")
                        .HasConstraintName("FK__HoaDon__maDN__47DBAE45")
                        .IsRequired();

                    b.Navigation("MaDnNavigation");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Phong", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.Khu", "MaKhuNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("MaKhu")
                        .HasConstraintName("FK__Phong__maKhu__34C8D9D1")
                        .IsRequired();

                    b.HasOne("Quanlykytucxa.Models.LoaiPhong", "MaloaiNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("Maloai")
                        .HasConstraintName("FK__Phong__maloai__35BCFE0A")
                        .IsRequired();

                    b.Navigation("MaKhuNavigation");

                    b.Navigation("MaloaiNavigation");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.ThongBao", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.SinhVien", "SinhVien")
                        .WithMany("ThongBaos")
                        .HasForeignKey("SinhVienId")
                        .HasConstraintName("FK_ThongBao_SinhVien")
                        .IsRequired();

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.YeuCauSuaChua", b =>
                {
                    b.HasOne("Quanlykytucxa.Models.Phong", "MaPhongNavigation")
                        .WithMany("YeuCauSuaChuas")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK__YeuCauSua__maPho__4D94879B");

                    b.HasOne("Quanlykytucxa.Models.SinhVien", "SinhVien")
                        .WithMany("YeuCauSuaChuas")
                        .HasForeignKey("SinhVienId")
                        .HasConstraintName("FK__YeuCauSuaC__maSV__4CA06362")
                        .IsRequired();

                    b.Navigation("MaPhongNavigation");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.DangKyKtx", b =>
                {
                    b.Navigation("ChitietDkdichvus");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.DichvuKtx", b =>
                {
                    b.Navigation("ChitietDkdichvus");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Diennuoc", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Khu", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.LoaiPhong", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.Phong", b =>
                {
                    b.Navigation("DangKyKtxes");

                    b.Navigation("Diennuocs");

                    b.Navigation("YeuCauSuaChuas");
                });

            modelBuilder.Entity("Quanlykytucxa.Models.SinhVien", b =>
                {
                    b.Navigation("DangKyKtxes");

                    b.Navigation("ThongBaos");

                    b.Navigation("YeuCauSuaChuas");
                });
#pragma warning restore 612, 618
        }
    }
}
